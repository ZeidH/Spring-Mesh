  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: user-service
    labels:
      app: user-service
      version: v1
      app.kubernetes.io/component: user-service
      app.kubernetes.io/instance: user-service
      app.kubernetes.io/part-of: Services
      app.openshift.io/runtime: spring
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: user-service
        version: v1
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'true'
        labels:
          app: user-service
          version: v1
          deploymentconfig: user-service
      spec:
        priorityClassName: development-priority
        containers:
        - name: user-service
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 9080
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /actuator/health
              port: 9080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 200M
              cpu: 100m
            limits:
              memory: 1Gi
              cpu: 600m
          image: ofocp.azurecr.io/navigator/mesh/user-service:main
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 9080
              protocol: TCP
          envFrom:
            - configMapRef:
                name: user-service-app-properties
          env:
            - name: spring.datasource.username
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: database-secrets
            - name: spring.datasource.password
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: database-secrets